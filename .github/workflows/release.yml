name: Release Automatizado

# Aciona o workflow sempre que houver um push para a branch principal (main)
on:
  push:
    branches:
      - main
    tags:
      - 'v*'   # Adicione esta linha para rodar em push de tags iniciando com 'v'
  workflow_dispatch:

# Define as permiss\u00f5es necess\u00e1rias para que o workflow possa criar tags e releases
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  # Job principal para criar o release
  release:
    name: Criar Novo Release
    runs-on: ubuntu-latest
    
    steps:
    
      # 1. Checkout do C\u00f3digo
      - name: Checkout do c\u00f3digo
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags to allow semantic-release to calculate the version
          fetch-depth: 0
      
      # 2. Configura\u00e7\u00e3o do Ambiente Python
      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # Use a vers\u00e3o do Python que voc\u00ea usa no projeto

      # 3. Cache de Depend\u00eancias
      - name: Configurar Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Instalar Semantic Release e Depend\u00eancias do Projeto
      # Instalamos o semantic-release e quaisquer depend\u00eancias necess\u00e1rias para que ele funcione.
      - name: Instalar Depend\u00eancias
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release

      # 5. Criar a TAG de Vers\u00e3o (Usando Semantic Release)
      # Este comando calcula a pr\u00f3xima vers\u00e3o (vX.Y.Z) e cria a TAG localmente e a envia para o GitHub.
      - name: Executar o Semantic Release (Cria Tag)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          semantic-release publish

      # 6. Criar o RELEASE no GitHub
      # Este passo \u00e9 necess\u00e1rio para que o RELEASE apare\u00e7a na interface lateral do reposit\u00f3rio.
      # Ele s\u00f3 \u00e9 executado se o passo anterior tiver criado uma nova tag.
      - name: Criar o Release Oficial no GitHub
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          # Usa o TOKEN para autenticar
          token: ${{ secrets.GITHUB_TOKEN }}
          # Indica que a \u00faltima tag deve ser usada como nome do release
          tag_name: ${{ github.ref }}
          # Define o t\u00edtulo e gera o corpo do release automaticamente
          name: Release ${{ github.ref }}
          # Habilita a gera\u00e7\u00e3o autom\u00e1tica da changelog
          generate_release_notes: true